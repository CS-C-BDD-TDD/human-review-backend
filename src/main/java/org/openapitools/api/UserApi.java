/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import java.util.Optional;

import javax.validation.Valid;

import org.openapitools.model.auth.AuthCredentials;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2018-10-11T09:52:13.189-04:00[America/New_York]")

@Validated
@Api(value = "user", description = "the user API")
public interface UserApi {

	default Optional<NativeWebRequest> getRequest() {
		return Optional.empty();
	}

	 @ApiOperation(value = "", nickname = "userPut", notes = "", response = String.class, tags={  })
	    @ApiResponses(value = { 
	        @ApiResponse(code = 200, message = "OK", response = String.class) })
	    @RequestMapping(value = "/user",
	        produces = { "text/plain" }, 
	        consumes = { "application/json" },
	        method = RequestMethod.PUT)
	    default ResponseEntity<String> userPut(@ApiParam(value = "Allow the user to submit their credentials and on success return a token for use in making other REST calls" ,required=true )  @Valid @RequestBody AuthCredentials authCredentials) {
	        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

	    }

}
